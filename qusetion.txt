Walk Alone是一位动态规划专家，但他厌倦了传统的动态规划问题，比如在二维网格上计算路径数量，所以他想要反过来做。他提出的问题如下：

在一个大小为n×n的二维网格上，最初你位于网格(1,1)。网格由0和1组成，你只能走在含有数字1的网格上。你只能向下或向右走，也就是说，你只能将x或y增加一。此外，你不能走出网格外。

给定从(1,1)到(n,n)有x种走法，你需要构造一个n×n的网格，使得走法恰好为x。然而，由于Walk Alone的大脑太小，无法记住这么大的网格，因此你需要保证网格的大小n等于或小于30。

输入
输入的唯一一行包含一个整数x (1≤x≤109)，表示走法的数量。

输出
输出的第一行包含网格的大小n。请注意，你需要保证1≤n≤30。

接下来的n行每行包含n个整数ai,j∈{0,1}，表示网格，其中0表示你不能走在网格上，而1表示相反。